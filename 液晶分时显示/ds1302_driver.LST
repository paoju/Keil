C51 COMPILER V6.12  DS1302_DRIVER                                                          04/20/2010 21:33:11 PAGE 1   


C51 COMPILER V6.12, COMPILATION OF MODULE DS1302_DRIVER
OBJECT MODULE PLACED IN .\ds1302_driver.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\ds1302_driver.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include <reg52.h>
   2          #include "declare.h"
   3          sbit  DS1302_CLK = P3^7;              //实时时钟时钟线引脚 
   4          sbit  DS1302_IO  = P3^6;              //实时时钟数据线引脚 
   5          sbit  DS1302_RST = P2^5;              //实时时钟复位线引脚
   6          sbit  ACC0 = ACC^0;
   7          sbit  ACC7 = ACC^7;
   8          void delay(int);
   9          unsigned char read_add(unsigned char);
  10          void write_add(unsigned char,unsigned char);
  11          unsigned char bcdconvert(unsigned char bcd)
  12          {
  13   1      	unsigned char target;
  14   1      	target=bcd>>4;
  15   1      	target=target*10+(bcd&=0x0f);
  16   1      	return(target);
  17   1      }
  18          unsigned char convertbcd(unsigned char ten)
  19          {
  20   1      	unsigned char bcd,a,b;
  21   1      	a=ten/10;
  22   1      	b=ten%10;
  23   1      	a=a<<4;
  24   1      	bcd=(a&=0xf0)+(b&=0x0f);
  25   1      	return(bcd);
  26   1      }
  27          void DS1302InputByte(unsigned char d) 	//实时时钟写入一字节(内部函数)
  28          { 
  29   1          unsigned char i;
  30   1          ACC = d;
  31   1          for(i=8; i>0; i--)
  32   1          {
  33   2              DS1302_IO = ACC0;           	//相当于汇编中的 RRC
  34   2              DS1302_CLK = 1;
  35   2              DS1302_CLK = 0;
  36   2              ACC = ACC >> 1; 
  37   2          } 
  38   1      }
  39          unsigned char DS1302OutputByte(void) 	//实时时钟读取一字节(内部函数)
  40          { 
  41   1          unsigned char i;
  42   1          for(i=8; i>0; i--)
  43   1          {
  44   2              ACC = ACC >>1;         			//相当于汇编中的 RRC 
  45   2              ACC7 = DS1302_IO;
  46   2              DS1302_CLK = 1;
  47   2              DS1302_CLK = 0;
  48   2          } 
  49   1          return(ACC); 
  50   1      }
  51          void write_clock(unsigned char ucAddr, unsigned char ucDa)	//ucAddr: DS1302地址, ucData: 要写的数据
  52          {
  53   1          DS1302_RST = 0;
  54   1          DS1302_CLK = 0;
  55   1          DS1302_RST = 1;
C51 COMPILER V6.12  DS1302_DRIVER                                                          04/20/2010 21:33:11 PAGE 2   

  56   1          DS1302InputByte(ucAddr);       	// 地址，命令 
  57   1          DS1302InputByte(convertbcd(ucDa));       	// 写1Byte数据
  58   1          DS1302_CLK = 1;
  59   1          DS1302_RST = 0;
  60   1      } 
  61          unsigned char read_clock(unsigned char ucAddr)	//读取DS1302某地址的数据
  62          {
  63   1          unsigned char ucData;
  64   1          DS1302_RST = 0;
  65   1          DS1302_CLK = 0;
  66   1          DS1302_RST = 1;
  67   1          DS1302InputByte(ucAddr|0x01);        // 地址，命令 
  68   1          ucData = DS1302OutputByte();         // 读1Byte数据
  69   1          DS1302_CLK = 1;
  70   1          DS1302_RST = 0;
  71   1          return(bcdconvert(ucData));
  72   1      	delay(5);
  73   1      }
  74          void init_ds1302()
  75          {
  76   1      	/********第一次上电初始化*******/
  77   1      /*	year=10; writeyear;
  78   1      	month=3; writemonth;
  79   1      	day=31; writeday;
  80   1      	hour=21; writehour;
  81   1      	minute=2; writeminute;
  82   1      	second=13; writesecond;*/
  83   1      	/*******从24c02读取数据*********/
  84   1      
  85   1      	year=read_add(1); writeyear;
  86   1      	month=read_add(2); writemonth;
  87   1      	day=read_add(3); writeday;
  88   1      	hour=read_add(4); writehour;
  89   1      	minute=read_add(5); writeminute;
  90   1      	second=read_add(6); writesecond;
  91   1      	week=read_add(7);  writeweek;
  92   1      	alarmhour=read_add(8);
  93   1      	alarmminute=read_add(9);
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
