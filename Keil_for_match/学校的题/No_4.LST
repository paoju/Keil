C51 COMPILER V8.09   NO_4                                                                  10/13/2010 20:45:32 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE NO_4
OBJECT MODULE PLACED IN No_4.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE No_4.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #define U8 unsigned char
   5          #define U16 unsigned int
   6          #define CMD 0
   7          #define DATA 1
   8          sbit rtc_clk=P1^6;
   9          sbit rtc_io=P1^7;
  10          sbit rtc_rst=P3^0;
  11          
  12          sbit lcd_cs=P0^3;
  13          sbit lcd_clk=P1^2;
  14          sbit lcd_sid=P0^2;
  15          
  16          sbit DQ=P1^0;
  17          void rtc_gettime();
  18          struct RTC
  19          {
  20                  U8 second;
  21                  U8 minute;
  22                  U8 hour;
  23                  U8 day;
  24                  U8 month;
  25                  U8 week;
  26                  U8 year;
  27          } time;
  28          U8 second_old;
  29          U16 temp_old;
  30          void delayus(U16 z)
  31          {
  32   1              while(z--);
  33   1      }
  34          void delay_1ms(U16 z)
  35          {
  36   1              U8 i;
  37   1              while(z--)
  38   1                      for(i=0;i<110;i++);
  39   1      }
  40          void lcd_writeonechar(U8 dat)
  41          {
  42   1              U8 i;
  43   1              for(i=0;i<8;i++)
  44   1              {
  45   2                      dat<<=1;
  46   2                      lcd_sid=CY;
  47   2                      lcd_clk=0;
  48   2                      lcd_clk=1;
  49   2              }
  50   1      }
  51          
  52          void lcd_writecd(bit cd,U8 dat)
  53          {
  54   1              lcd_cs=1;
  55   1              lcd_writeonechar(cd==0?0xf8:0xfa);
C51 COMPILER V8.09   NO_4                                                                  10/13/2010 20:45:32 PAGE 2   

  56   1              lcd_writeonechar(dat&0xf0);
  57   1              lcd_writeonechar(dat<<4);
  58   1              lcd_cs=0;
  59   1      }
  60          
  61          void lcd_string(U8 add,U8 *pt)
  62          {
  63   1              lcd_writecd(0,add);
  64   1              while(*pt!='\0')
  65   1                      lcd_writecd(1,*pt++);
  66   1      }
  67          
  68          void rtc_writeonechar(U8 dat)
  69          {
  70   1              U8 i;
  71   1              for(i=0;i<8;i++)
  72   1              {
  73   2                      dat>>=1;
  74   2                      rtc_clk=0;
  75   2                      rtc_io=CY;
  76   2                      rtc_clk=1;
  77   2              }
  78   1      }
  79          
  80          U8 rtc_readonechar()
  81          {
  82   1              U8 i,temp=0;
  83   1              for(i=0;i<8;i++)
  84   1              {
  85   2                      rtc_clk=0;
  86   2                      temp|=((U8)rtc_io)<<i;
  87   2                      rtc_clk=1;
  88   2              }
  89   1              return temp/16*10+temp%16;
  90   1      }
  91          
  92          void rtc_write(U8 add,U8 dat)
  93          {
  94   1              rtc_rst=0;
  95   1              rtc_clk=0;
  96   1              rtc_rst=1;
  97   1              rtc_writeonechar(add);
  98   1              rtc_writeonechar((dat/10)<<4 | dat%10);
  99   1              rtc_rst=0;
 100   1      }
 101          
 102          U8 rtc_read(U8 add)
 103          {
 104   1              U8 temp=0;
 105   1              rtc_rst=0;
 106   1              rtc_clk=0;
 107   1              rtc_rst=1;
 108   1              rtc_writeonechar(add|1);
 109   1              temp=rtc_readonechar();
 110   1              rtc_rst=0;
 111   1              return temp;
 112   1      }
 113          
 114          void temp_init()
 115          {
 116   1              bit s;
 117   1              DQ=1;
C51 COMPILER V8.09   NO_4                                                                  10/13/2010 20:45:32 PAGE 3   

 118   1              delayus(8);
 119   1              DQ=0;
 120   1              delayus(80);
 121   1              DQ=1;
 122   1              delayus(14);
 123   1              s=DQ;
 124   1              delayus(20);
 125   1      }
 126          
 127          void temp_writeonechar(U8 dat)
 128          {
 129   1              U8 i;
 130   1              for(i=0;i<8;i++)
 131   1              {
 132   2                      dat>>=1;
 133   2                      DQ=0;
 134   2                      DQ=CY;
 135   2                      delayus(5);
 136   2                      DQ=1;
 137   2              }
 138   1              delayus(4);
 139   1      }
 140          
 141          U8 temp_readonechar()
 142          {
 143   1              U8 i,temp=0;
 144   1              for(i=0;i<8;i++)
 145   1              {
 146   2                      DQ=0;
 147   2                      DQ=1;
 148   2                      temp|=((U8)DQ)<<i;
 149   2                      delayus(4);
 150   2              }
 151   1              return temp;
 152   1      }
 153          
 154          U16 temp_read()
 155          {
 156   1              U8 low,high;
 157   1              U16 t;
 158   1              float tt;
 159   1              temp_init();
 160   1              temp_writeonechar(0xcc);
 161   1              temp_writeonechar(0x44);
 162   1              temp_init();
 163   1              temp_writeonechar(0xcc);
 164   1              temp_writeonechar(0xbe);
 165   1              low=temp_readonechar();
 166   1              high=temp_readonechar();
 167   1              t=high;
 168   1              t<<=8;
 169   1              t|=low;
 170   1              tt=t*0.0625;
 171   1              t=tt*10+0.5;
 172   1              return t;
 173   1      }
 174          
 175          
 176          
 177          void lcd_normal_init()
 178          {
 179   1              lcd_writecd(0,0x01);
C51 COMPILER V8.09   NO_4                                                                  10/13/2010 20:45:32 PAGE 4   

 180   1              delay_1ms(5);
 181   1              lcd_string(0x83,":   : ");
 182   1              lcd_string(0x90,"20");
 183   1              lcd_string(0x92,"-   - ");
 184   1              lcd_string(0x96,"ÖÜ");
 185   1              rtc_gettime();
 186   1      }
 187          void lcd_temp_init()
 188          {
 189   1              lcd_writecd(0,0x01);
 190   1              delay_1ms(5);
 191   1              lcd_string(0x81,"µ±Ç°ÊÒÎÂ£º");
 192   1      }
 193          void lcd_displaytwo(U8 add,U8 dat)
 194          {
 195   1              lcd_writecd(0,add);
 196   1              lcd_writecd(1,dat/10+'0');
 197   1              lcd_writecd(1,dat%10+'0');
 198   1      }
 199          void rtc_gettime()
 200          {
 201   1              U8 i,*pt=&time.second;
 202   1              for(i=0;i<7;i++)
 203   1                      *pt++=rtc_read(0x80+(i*2));
 204   1              lcd_displaytwo(0x82,time.hour);
 205   1              lcd_displaytwo(0x84,time.minute);
 206   1              lcd_displaytwo(0x86,time.second);
 207   1              lcd_displaytwo(0x91,time.year);
 208   1              lcd_displaytwo(0x93,time.month);
 209   1              lcd_displaytwo(0x95,time.day);
 210   1              lcd_writecd(0,0x97);
 211   1              lcd_writecd(1,time.week+'0');
 212   1      }
 213          void lcd_normal()
 214          {
 215   1              time.second=rtc_read(0x80);
 216   1              if(time.second!=second_old)
 217   1              {
 218   2                      second_old=time.second;
 219   2                      lcd_writecd(0,0x86);
 220   2                      lcd_writecd(1,time.second/10+'0');
 221   2                      lcd_writecd(1,time.second%10+'0');
 222   2                      if(time.second==0)
 223   2                              rtc_gettime();  
 224   2              }
 225   1      }
 226          void lcd_temp()
 227          {
 228   1              U16 dat=temp_read();
 229   1              if(dat!=temp_old)
 230   1              {
 231   2                      temp_old=dat;
 232   2                      lcd_writecd(0,0x92);
 233   2                      lcd_writecd(1,dat/100+'0');
 234   2                      lcd_writecd(1,dat%100/10+'0');
 235   2                      lcd_writecd(1,'.');
 236   2                      lcd_writecd(1,dat%10+'0');
 237   2                      lcd_string(0x95,"¡æ");
 238   2              }
 239   1      }
 240          void main()
 241          {
C51 COMPILER V8.09   NO_4                                                                  10/13/2010 20:45:32 PAGE 5   

 242   1              U16 i,j;
 243   1              lcd_writecd(0,0x0c);
 244   1              rtc_write(0x8e,0);
 245   1              lcd_normal_init();
 246   1              while(1)
 247   1              {
 248   2                      lcd_normal_init();
 249   2                      for(i=0;i<150;i++)
 250   2                      {
 251   3                              for(j=0;j<110;j++)
 252   3                                      lcd_normal();
 253   3                      }
 254   2                      lcd_temp_init();
 255   2                      for(i=0;i<10;i++)
 256   2                      {
 257   3                              for(j=0;j<110;j++)
 258   3                                      lcd_temp();
 259   3                      }
 260   2              }
 261   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    960    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
