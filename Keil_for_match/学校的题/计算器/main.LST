C51 COMPILER V8.09   MAIN                                                                  10/15/2010 20:34:30 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          sbit hd_cs=P0^4;
   5          sbit hd_clk=P0^5;
   6          sbit hd_dat=P0^6;
   7          sbit hd_key=P0^7;
   8          sbit lcd_cs=P0^3;
   9          sbit lcd_clk=P1^2;
  10          sbit lcd_sid=P0^2;
  11          U8 stat=0,symbol=0,offset=0,counter=0;
  12          bit buff=0;
  13          int a=0,b=0;
  14          float result;
  15          char buf[8]=0;
  16          void hd_longdelay()
  17          {
  18   1              U8 i;
  19   1              for(i=0;i<50;i++);
  20   1      }
  21          
  22          void hd_shortdelay()
  23          {
  24   1              U8 i;
  25   1              for(i=0;i<8;i++);
  26   1      }
  27          void delay_1ms(U16 z)
  28          {
  29   1              U8 i;
  30   1              while(z--)
  31   1                      for(i=0;i<110;i++);
  32   1      }
  33          void hd_writeonechar(U8 dat)
  34          {
  35   1              U8 i;
  36   1              hd_cs=0;
  37   1              hd_dat=0;
  38   1              hd_longdelay();
  39   1              for(i=0;i<8;i++)
  40   1              {
  41   2                      dat<<=1;
  42   2                      hd_dat=CY;
  43   2                      hd_clk=1; hd_shortdelay();
  44   2                      hd_clk=0; hd_shortdelay();
  45   2              }
  46   1              hd_dat=0;
  47   1      }
  48          
  49          U8 hd_readonechar()
  50          {
  51   1              U8 i,temp=0;
  52   1              hd_dat=1;
  53   1              hd_longdelay();
  54   1              for(i=0;i<8;i++)
  55   1              {
C51 COMPILER V8.09   MAIN                                                                  10/15/2010 20:34:30 PAGE 2   

  56   2                      hd_clk=1; hd_shortdelay();
  57   2                      temp|=((U8)hd_dat)<<(7-i);
  58   2                      hd_clk=0; hd_shortdelay();
  59   2              }
  60   1              hd_dat=0;
  61   1              return temp;
  62   1      }
  63          
  64          void hd_write(U8 add,U8 dat)
  65          {
  66   1              hd_writeonechar(add);
  67   1              hd_writeonechar(dat);
  68   1      }
  69          
  70          U8 hd_read(U8 add)
  71          {
  72   1              hd_writeonechar(add);
  73   1              return(hd_readonechar());
  74   1      }
  75          
  76          U8 hd_keyconvert(U8 dat)
  77          {
  78   1              switch(dat)
  79   1              {
  80   2                      case 6 : dat=1; break;
  81   2                      case 5 : dat=2; break;
  82   2                      case 4 : dat=3; break;
  83   2                      case 3 : dat=13; break;
  84   2                      case 14 : dat=4; break;
  85   2                      case 13 : dat=5; break;
  86   2                      case 12 : dat=6; break;
  87   2                      case 11 : dat=14; break;
  88   2                      case 22 : dat=7; break;
  89   2                      case 21 : dat=8; break;
  90   2                      case 20 : dat=9; break;
  91   2                      case 19 : dat=15; break;
  92   2                      case 30 : dat=11; break;
  93   2                      case 29 : dat=0; break;
  94   2                      case 28 : dat=12; break;
  95   2                      case 27 : dat=16; break;
  96   2              }
  97   1              return dat;
  98   1      }
  99          void lcd_writeonechar(U8 dat)
 100          {
 101   1              U8 i;
 102   1              for(i=0;i<8;i++)
 103   1              {
 104   2                      dat<<=1;
 105   2                      lcd_sid=CY;
 106   2                      lcd_clk=0;
 107   2                      lcd_clk=1;
 108   2              }
 109   1      }
 110          
 111          void lcd_writecd(bit cd,U8 dat)
 112          {
 113   1              lcd_cs=1;
 114   1              lcd_writeonechar(cd==0?0xf8:0xfa);
 115   1              lcd_writeonechar(dat&0xf0);
 116   1              lcd_writeonechar(dat<<4);
 117   1              lcd_cs=0;
C51 COMPILER V8.09   MAIN                                                                  10/15/2010 20:34:30 PAGE 3   

 118   1      }
 119          
 120          void lcd_string(U8 add,U8 *pt)
 121          {
 122   1              lcd_writecd(0,add);
 123   1              while(*pt!='\0')
 124   1                      lcd_writecd(1,*pt++);
 125   1      }
 126          
 127          void key_process(U8 key)
 128          {
 129   1              U8 i;
 130   1              if(key>=0&&key<10)
 131   1              {
 132   2                      buf[counter]=key+'0';
 133   2                      counter++;
 134   2                      lcd_string(0x90,"                 ");
 135   2                      lcd_string(0x96-(strlen(buf)-1)/2,buf);
 136   2                      if(buff==0)
 137   2                              offset=strlen(buf)/2;
 138   2              }
 139   1              else if(key>=13&&key<=16&stat==0)
 140   1              {
 141   2                      lcd_string(0x80,"                ");
 142   2                      lcd_string(0x80,buf);
 143   2                      sscanf(buf,"%d",&a);
 144   2                      for(i=0;i<8;i++)
 145   2                              buf[i]=0;
 146   2                      switch(key-12)
 147   2                      {
 148   3                              case 1: lcd_writecd(1,'+'); break;
 149   3                              case 2: lcd_writecd(1,'-'); break;
 150   3                              case 3: lcd_writecd(1,'*'); break;
 151   3                              case 4: lcd_writecd(1,'/'); break;
 152   3                      }
 153   2                      symbol=key-12;
 154   2                      stat=1;
 155   2                      counter=0;
 156   2                      buff=1;
 157   2              }
 158   1              else if(key==12&&stat==1)
 159   1              {
 160   2                      lcd_string(0x80+offset+1,buf);
 161   2                      lcd_writecd(1,'=');
 162   2                      sscanf(buf,"%d",&b);
 163   2                      for(i=0;i<8;i++)
 164   2                              buf[i]=0;
 165   2                      lcd_string(0x90,"                   ");
 166   2                      switch(symbol)
 167   2                      {
 168   3                              case 1: result=a+b; break;
 169   3                              case 2: result=a-b; break;
 170   3                              case 3: result=a*b; break;
 171   3                              case 4: result=a/b; break;
 172   3                      }
 173   2                      sprintf(buf,"%.0f",result);
 174   2                      lcd_string((0x96-(strlen(buf)-1)/2),buf);
 175   2                      a=0;b=0;
 176   2                      for(i=0;i<8;i++)
 177   2                              buf[i]=0;
 178   2                      stat=0;
 179   2                      offset=0;
C51 COMPILER V8.09   MAIN                                                                  10/15/2010 20:34:30 PAGE 4   

 180   2                      counter=0;
 181   2                      buff=0;
 182   2              }
 183   1      }
 184          
 185          void main()
 186          {
 187   1              hd_writeonechar(0xa4);
 188   1              lcd_writecd(0,0x0c);
 189   1              lcd_writecd(0,0x01);
 190   1              delay_1ms(5);
 191   1              lcd_string(0x96,"0.");
 192   1              while(1)
 193   1              {
 194   2                      if(!hd_key)
 195   2                      {
 196   3                              key_process(hd_keyconvert(hd_read(0x15)));
 197   3                      }while(!hd_key);
 198   2                      delay_1ms(5);
 199   2              }       
 200   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    939    ----
   CONSTANT SIZE    =     66    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
