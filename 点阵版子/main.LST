C51 COMPILER V8.09   MAIN                                                                  12/12/2010 11:40:53 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "MyFun.h"
   3          #include <stdio.h>
   4          
   5          #define U8 unsigned char
   6          #define U16 unsigned int
   7          #define U32 unsigned long
   8          
   9          U8 BUF[504]=0; //写入缓冲区
  10          U8 HBUF[480]=0;//手写缓冲区
  11          U8 data DBUF[3]=0;//显示缓冲区
  12          U8 CBUF[3]=0;//命令缓冲区
  13          U16 count=0;//输入计数
  14          U8 DataSize=0,mode=0;//汉字量，运行状态
  15          U8 Page=0;//手写页数
  16          U16 Total=0;//总数据量
  17          U16 DUTotal=0;
  18          U16 DUENDP=0;
  19          U16 DUENDL=0;
  20          U8 Speed=11;//流动速度
  21          U8 DisplayMode=0;
  22          U16 PublicTemp=0;
  23          U32 Ltemp,L2temp;
  24          sbit clk=P3^3;
  25          sbit dat=P3^2;
  26          
  27          void delay(U16 z)
  28          {
  29   1              U8 i;
  30   1              while(z--)
  31   1                      for(i=0;i<20;i++);
  32   1      }
  33          
  34          void Uart_init()
  35          {
  36   1              SCON=0x52;
  37   1              TMOD=0x21;
  38   1      //      PCON=0x80;//波特率加倍
  39   1              TH1=TL1=0xfa;
  40   1              TR1=1;
  41   1              TI=0;
  42   1              RI=0;
  43   1              ES=1;
  44   1              EA=1;
  45   1              IP=0X10;
  46   1              REN=1;
  47   1      }
  48          
  49          void Write2Flash(U16 add)
  50          {
  51   1              U16 i,j=0;
  52   1              ISP_sectorerase(add);
  53   1              for(i=0;i<504;i++)
  54   1                      ISP_write(add+i,BUF[i]);
  55   1      }
C51 COMPILER V8.09   MAIN                                                                  12/12/2010 11:40:53 PAGE 2   

  56          void Hand_Write_Display()
  57          {
  58   1              U8 i;
  59   1              for(i=0;i<160;i++)
  60   1              {
  61   2      
  62   2                      if(i)
  63   2                              dat=0;
  64   2                      else
  65   2                              dat=1;
  66   2                      clk=0;
  67   2                      clk=1;
  68   2                      P0=HBUF[3*i];
  69   2                      P1=HBUF[3*i+1];
  70   2                      P2=HBUF[3*i+2];
  71   2                      delay(3);
  72   2                      P0=P1=P2=0x00;
  73   2                      if(mode!=3 && mode!=4)
  74   2                              break;
  75   2              }
  76   1      }
  77          void RIGHT_TO_LEFT_Display()
  78          {
  79   1              U16 j;
  80   1              U8 k,l;
  81   1              U16 temp;
  82   1              for(j=0;Total<=480?j<Total:j<Total-160;j++)
  83   1              {
  84   2                      for(k=0;k<Speed;k++)
  85   2                      {
  86   3                              for(l=0;l<160;l++)
  87   3                              {
  88   4                                      temp=((3*(j+l))/504)*512 + (3*(j+l))%504 + 0x0200;
  89   4                                      DBUF[0]=ISP_read(temp);
  90   4                                      DBUF[1]=ISP_read(temp+1);
  91   4                                      DBUF[2]=ISP_read(temp+2);
  92   4                                      if(l)
  93   4                                              dat=0;
  94   4                                      else
  95   4                                              dat=1;
  96   4                                      clk=0;
  97   4                                      clk=1;
  98   4                                      P0=DBUF[0];
  99   4                                      P1=DBUF[1];
 100   4                                      P2=DBUF[2];
 101   4                                      delay(3);
 102   4                                      P0=P1=P2=0x00;
 103   4                                      if(mode || DisplayMode) break;
 104   4                              }
 105   3                              if(mode || DisplayMode) break;
 106   3                      }
 107   2                      if(mode || DisplayMode) break;
 108   2              }
 109   1      }
 110          void DOWN_TO_UP_Display()
 111          {
 112   1              U8 k,l;
 113   1              U16 j,temp;
 114   1              for(j=0;j<DUTotal+24;j++)
 115   1              {
 116   2                      for(k=0;((j+1)%24==0)?k<Speed*10:k<Speed;k++)
 117   2                      {
C51 COMPILER V8.09   MAIN                                                                  12/12/2010 11:40:53 PAGE 3   

 118   3                              for(l=0;l<160;l++)
 119   3                              {
 120   4                                      if(j<24)
 121   4                                              Ltemp=0;
 122   4                                      else if(j>=DUENDP+24 && l>DUENDL)
 123   4                                              L2temp=0;
 124   4                                      else
 125   4                                      {
 126   5                                              temp=0x0200 + l*3 + (j/24-1)*512;
 127   5                                              DBUF[0]=ISP_read(temp);
 128   5                                              DBUF[1]=ISP_read(temp+1);
 129   5                                              DBUF[2]=ISP_read(temp+2);
 130   5                                              Ltemp=DBUF[0];
 131   5                                              Ltemp<<=8;
 132   5                                              Ltemp|=DBUF[1];
 133   5                                              Ltemp<<=8;
 134   5                                              Ltemp|=DBUF[2];
 135   5                                      }
 136   4                                      if(j>DUTotal)
 137   4                                              L2temp=0;
 138   4                                      else if(j>DUENDP && l>DUENDL)
 139   4                                              L2temp=0;
 140   4                                      else
 141   4                                      {
 142   5                                              temp=0x0200 + l*3 + (j/24)*512;
 143   5                                              DBUF[0]=ISP_read(temp);
 144   5                                              DBUF[1]=ISP_read(temp+1);
 145   5                                              DBUF[2]=ISP_read(temp+2);
 146   5                                              L2temp=DBUF[0];
 147   5                                              L2temp<<=8;
 148   5                                              L2temp|=DBUF[1];
 149   5                                              L2temp<<=8;
 150   5                                              L2temp|=DBUF[2];
 151   5                                      }
 152   4                                      if(l)
 153   4                                              dat=0;
 154   4                                      else
 155   4                                              dat=1;
 156   4                                      clk=0;
 157   4                                      clk=1;
 158   4                                      P0=P1=P2=0x00;  
 159   4                                      Ltemp<<=j%24;
 160   4                                      L2temp>>=(23-j%24);
 161   4                                      Ltemp|=L2temp;
 162   4                                      DBUF[2]=(U8)(Ltemp&0xff);
 163   4                                      Ltemp>>=8;
 164   4                                      DBUF[1]=(U8)(Ltemp&0xff);
 165   4                                      Ltemp>>=8;
 166   4                                      DBUF[0]=(U8)(Ltemp&0xff);
 167   4                                      P0=DBUF[0];
 168   4                                      P1=DBUF[1];
 169   4                                      P2=DBUF[2];
 170   4                                      if(j<24)
 171   4                                              delay(1);
 172   4                                      if(mode || DisplayMode!=1)      break;
 173   4                              }
 174   3                              if(mode || DisplayMode!=1)      break;
 175   3                      }
 176   2                      if(mode || DisplayMode!=1)      break;
 177   2              }
 178   1      }
 179          
C51 COMPILER V8.09   MAIN                                                                  12/12/2010 11:40:53 PAGE 4   

 180          
 181          void main()
 182          {
 183   1              U16 i;
 184   1              for(i=0;i<480;i++)
 185   1                      HBUF[i]=0;
 186   1              for(i=0;i<504;i++)
 187   1                      BUF[i]=0;
 188   1              Total=ISP_read(0x0000);
 189   1              DUENDP=(Total/7)*24;
 190   1              DUENDL=(Total%7)*24;
 191   1              DUTotal=(Total/7+1)*24;
 192   1              Total*=24;
 193   1              Uart_init();
 194   1      
 195   1              while(1)
 196   1              {
 197   2                      switch(mode)
 198   2                      {
 199   3                              case 0 : 
 200   3                                              switch(DisplayMode)
 201   3                                              {
 202   4                                                      case 0 : RIGHT_TO_LEFT_Display(); break;
 203   4                                                      case 1 : DOWN_TO_UP_Display(); break; 
 204   4                                              }                                       
 205   3                                              break;
 206   3                              case 3 : 
 207   3                              case 4 : Hand_Write_Display();  break;
 208   3                      }
 209   2              }
 210   1      }
 211          bit CMDCMP(U8 *pt)
 212          {
 213   1              U8 i;
 214   1              for(i=0;i<3;i++)
 215   1              {
 216   2                      if(*pt++!=CBUF[i])
 217   2                              return 0;
 218   2              }
 219   1              return 1;
 220   1      }
 221          void Clear_CBUF()
 222          {
 223   1              U8 i;
 224   1              for(i=0;i<3;i++)
 225   1                      CBUF[i]=0;
 226   1      }
 227          void Ser_Handle() interrupt 4
 228          {
 229   1              RI=0;
 230   1              if(mode==0)
 231   1              {
 232   2                      if(SBUF>=1 && SBUF<=15)
 233   2                      {
 234   3                              Speed=SBUF;
 235   3                              Speed=31-SBUF*2;
 236   3                      }
 237   2                      else
 238   2                      {
 239   3                              CBUF[0]=CBUF[1];
 240   3                              CBUF[1]=CBUF[2];
 241   3                              CBUF[2]=SBUF;
C51 COMPILER V8.09   MAIN                                                                  12/12/2010 11:40:53 PAGE 5   

 242   3                      }
 243   2                      if(CMDCMP("STA"))
 244   2                      {
 245   3                              Clear_CBUF();
 246   3                              mode=1;
 247   3                              count=0;
 248   3                      }
 249   2                      else if(CMDCMP("HAN"))
 250   2                      {
 251   3                              Clear_CBUF();
 252   3                              mode=3;
 253   3                              count=0;
 254   3                      }
 255   2                      else if(CMDCMP("DUP"))
 256   2                      {
 257   3                              Clear_CBUF();
 258   3                              DisplayMode=1;
 259   3                      }
 260   2                      else if(CMDCMP("RTL"))
 261   2                      {
 262   3                              Clear_CBUF();
 263   3                              DisplayMode=0;                  
 264   3                      }
 265   2              }
 266   1              else if(mode==1)
 267   1              {
 268   2                      DataSize=SBUF;
 269   2                      if(DataSize!=0)
 270   2                      {
 271   3                              ISP_sectorerase(0x0000);
 272   3                              ISP_write(0x0000,DataSize);
 273   3                              Total=DataSize*24;
 274   3                              DUENDP=(DataSize/7)*24;
 275   3                              DUENDL=(DataSize%7)*24;
 276   3                              DUTotal=(DataSize/7+1)*24;
 277   3                              mode=2;
 278   3                      }
 279   2              }
 280   1              else if(mode==2)
 281   1              {
 282   2                      BUF[count%504]=SBUF;
 283   2                      count++;
 284   2                      if(count%72==0)
 285   2                      {       
 286   3                              if(count%504==0)
 287   3                              {
 288   4                                      Write2Flash(0x0200+(count/504-1)*512);
 289   4                              }
 290   3                              if(count==(DataSize*72))
 291   3                              {
 292   4                                      Write2Flash(0x0200+(count/504)*512);    
 293   4                                      count=0;
 294   4                                      mode=0;
 295   4                              }
 296   3                      }
 297   2              }
 298   1              else if(mode==3)
 299   1              {
 300   2                      Page=SBUF;
 301   2                      if(Page=='Q')
 302   2                              mode=0;
 303   2                      else if(Page=='C')
C51 COMPILER V8.09   MAIN                                                                  12/12/2010 11:40:53 PAGE 6   

 304   2                      {
 305   3                              for(PublicTemp=0;PublicTemp<480;PublicTemp++)
 306   3                                      HBUF[PublicTemp]=0;
 307   3                      }
 308   2                      else if(Page>=0 && Page<=6)
 309   2                              mode=4;
 310   2              }
 311   1              else if(mode==4)
 312   1              {
 313   2                      if(Page==6)
 314   2                      {
 315   3                              if(count>=48)
 316   3                              {
 317   4                                      count++;
 318   4                                      if(count==72)
 319   4                                      {
 320   5                                              count=0;
 321   5                                              mode=3;                         
 322   5                                      }
 323   4                              }
 324   3                              else
 325   3                                      HBUF[432+ count++]=SBUF;
 326   3                      }
 327   2                      else
 328   2                      {
 329   3                              HBUF[Page*72+count++]=SBUF;
 330   3                              if(count==72)
 331   3                              {
 332   4                                      count=0;
 333   4                                      mode=3;
 334   4                              }
 335   3                      }
 336   2              }
 337   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2728    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   1012      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
