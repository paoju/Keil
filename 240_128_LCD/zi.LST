C51 COMPILER V8.09   ZI                                                                    07/07/2010 22:10:08 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE ZI
OBJECT MODULE PLACED IN zi.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE zi.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include "code.h"
   3          #include "code1.h"
   4          #define uchar unsigned char
   5          #define uint unsigned int 
   6          #define AddressSend {}
   7          sbit ce=P2^7;
   8          sbit rw=P3^6;
   9          sbit rd=P3^7;
  10          sbit cd=P2^6;
  11          sbit rst=P2^5;
  12          uint address;
  13          uchar data1,data2,cmd;
  14          void clear();
  15          void delay(uint z)
  16          {
  17   1              uint i,j;
  18   1              for(i=z;i>0;i--)
  19   1                      for(j=110;j>0;j--);
  20   1      }
  21          void delayus(uint z)
  22          {
  23   1              while(z--);
  24   1      }
  25          void WriteData(uchar dat)           //写数据    
  26          {    ce=1;
  27   1           cd=0;
  28   1          rw=0;
  29   1           P0=dat; 
  30   1         delayus(12);
  31   1      
  32   1              ce=0;
  33   1           rw=1;
  34   1      }   
  35          void WriteCommand(uchar cmd)           //写命令    
  36          {   ce=1;
  37   1           cd=1;
  38   1           rw=0;
  39   1           P0=cmd;
  40   1      delayus(12);
  41   1              ce=0;
  42   1           rw=1;
  43   1      } 
  44          void WriteDC(uchar dat,uchar cmd)      //写一个数据和一个指令 
  45          {   
  46   1           WriteData(dat);   
  47   1           WriteCommand(cmd);   
  48   1      } 
  49          void WriteDDC(uchar data1, uchar data2, uchar cmd)   //写两个数据和一个指令 
  50          {   
  51   1           WriteData(data1);         
  52   1           WriteData(data2);   
  53   1           WriteCommand(cmd);     
  54   1      }   
  55          void LCD_Init(void)         //液晶初始化 
C51 COMPILER V8.09   ZI                                                                    07/07/2010 22:10:08 PAGE 2   

  56          {   
  57   1           uchar data1,data2,cmd;    
  58   1                      rw=1;
  59   1              
  60   1           
  61   1           data1 = 0x00;   
  62   1           data2 = 0x10;              //图形显示占用32*128=0xfff，故文本从0x1000开始
  63   1           cmd = 0x40;                //设置文本显示区首地址    
  64   1           WriteDDC(data1,data2,cmd);   
  65   1           data1 = 0x20;              //可以整屏显示
  66   1           data2 = 0x00;   
  67   1           cmd = 0x41;                //设置文本显示区宽度    
  68   1           WriteDDC(data1,data2,cmd);   
  69   1           data1 = 0x00;   
  70   1           data2 = 0x00;   
  71   1           cmd = 0x42;                //设置图形显示区首地址    
  72   1           WriteDDC(data1,data2,cmd);   
  73   1           data1 = 0x1e;   
  74   1           data2 = 0x00;   
  75   1           cmd = 0x43;                //设置图形显示区宽度    
  76   1           WriteDDC(data1,data2,cmd); 
  77   1         cmd =0xa2;                 //设置光标形状 
  78   1         WriteCommand(cmd); 
  79   1           cmd = 0x80;                //显示方式设置
  80   1                                    //启用外部字符发生器,显示方式是文本与图形与 
  81   1           WriteCommand(cmd); 
  82   1           cmd = 0x9e;                //启用光标闪烁,光标不显示,文本显示与图形显示    
  83   1           WriteCommand(cmd);   
  84   1      }
  85          
  86          
  87          
  88          void WriteOneChinese(uchar *codes)
  89          {
  90   1              uchar i=0,j=0;
  91   1              for(i=0;i<32;i++)
  92   1              {
  93   2                      WriteData(codes[i]);
  94   2                      j++;
  95   2                      if(j==2)
  96   2                      {
  97   3                              WriteCommand(0xb2);           //退出自动写模式
  98   3                          address=address+30;
  99   3                          data1 = address;                 //取地址低八位    
 100   3                          data2 = address>>8;                //取地址高八位    
 101   3                          cmd = 0x24; 
 102   3                          WriteDDC(data1,data2,cmd);
 103   3                          j=0;
 104   3                          WriteCommand(0xb0);         //进入自动写模式                
 105   3                      }
 106   2              }
 107   1      }
 108          void writezi(uchar row,uchar rol)
 109          {
 110   1              uint k,h=0,total;
 111   1              uchar t;
 112   1              total=sizeof(CG_code)/32/15-6;
 113   1              for(t=0;t<total;t++)
 114   1              {
 115   2                      address = row*30+rol;
 116   2                      data1 = address;                 //取地址低八位    
 117   2                      data2 = address>>8;                //取地址高八位    
C51 COMPILER V8.09   ZI                                                                    07/07/2010 22:10:08 PAGE 3   

 118   2                      cmd = 0x24; 
 119   2                      WriteDDC(data1,data2,cmd);
 120   2              //      WriteCommand(0xb0);//自动写模式
 121   2                      for(k=1;k<121;k++)
 122   2                      {   
 123   3                              h++;
 124   3                              WriteCommand(0xb2); 
 125   3                          address = row*30+rol+2*(h-1);
 126   3                              data1 = address;                 //取地址低八位    
 127   3                              data2 = address>>8;                //取地址高八位    
 128   3                              cmd = 0x24; 
 129   3                              
 130   3                              WriteDDC(data1,data2,cmd);
 131   3                          WriteCommand(0xb0);
 132   3                              WriteOneChinese(&CG_code[((k-1)+15*t)*32]);
 133   3                              if((t==total-1)&&(k==(sizeof(CG_code)/32%15)+105)) break;
 134   3                              if(((t>0)&&(k>107))||(t==0))
 135   3                                       delay(1000);
 136   3                              if(k%15==0)
 137   3                          {row=row+16;h=0;}
 138   3                      }
 139   2                      row=0;rol=0;
 140   2                      if(t<total-1)
 141   2                      clear();
 142   2              }
 143   1      }
 144          void WriteImage(uchar row,uchar rol,uchar hight,uchar width)
 145          {
 146   1              uint i;
 147   1              address=row*30+rol;
 148   1              data1=address;
 149   1              data2=address>>8;
 150   1              WriteDDC(data1,data2,0x24);
 151   1              WriteCommand(0xb0);
 152   1              for(i=0;i<(hight*width)/8;i++)
 153   1              {
 154   2                      WriteData(Image_code[i]);
 155   2                      delay(10);
 156   2              }
 157   1              WriteCommand(0xb2);
 158   1      }
 159          void clear()
 160          {
 161   1              uint i;
 162   1              WriteCommand(0xb2);
 163   1              data1 = 0x00;                 //取地址低八位    
 164   1              data2 = 0x00;                //取地址高八位    
 165   1              cmd = 0x24; 
 166   1              WriteDDC(data1,data2,cmd);
 167   1              WriteCommand(0xb0);//自动写模式
 168   1              for(i=0;i<5000;i++)
 169   1              {
 170   2                      WriteData(0x00);
 171   2              }
 172   1                      WriteCommand(0xb2);
 173   1      }
 174          void main()   
 175          {   
 176   1              rst=0;
 177   1              delay(5);
 178   1              rst=1;
 179   1              rd=1;  
C51 COMPILER V8.09   ZI                                                                    07/07/2010 22:10:08 PAGE 4   

 180   1              LCD_Init();
 181   1              clear();
 182   1              WriteImage(0,0,240,128);
 183   1              delay(10000);
 184   1              clear();
 185   1              writezi(0,0);
 186   1              while(1);
 187   1      }
 188          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    706    ----
   CONSTANT SIZE    =  15072    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
