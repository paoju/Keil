C51 COMPILER V8.09   GRAPHIC2                                                              06/09/2010 21:45:55 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE GRAPHIC2
OBJECT MODULE PLACED IN Graphic2.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Graphic2.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <math.h>
   3          #include <stdlib.h>
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          #define heng 1
   7          #define shu 2
   8          #define fill 1
   9          #define clear 2
  10          extern uint address;
  11          extern uchar data1,data2,cmd;
  12          extern uchar headhang,headlie,endhang,endlie;
  13          extern uchar foodx,foody;
  14          extern uchar snakelength;
  15          extern uchar position[20][2];
  16          extern bit addflag;
  17          void writecommand(uchar);
  18          void writedata(uchar);
  19          void writedc(uchar,uchar);
  20          void writeddc(uchar,uchar,uchar);
  21          void writeadd()
  22          {
  23   1              data1=address;
  24   1              data2=address>>8;
  25   1              writeddc(data1,data2,0x24);
  26   1      }
  27          void drawline(uchar hang,uchar lie,uchar length,uchar way,uchar foc)
  28          {
  29   1              uchar i;
  30   1              writecommand(0xb2); //退出自动写模式
  31   1              address=hang*30+lie/8;
  32   1              writeadd();
  33   1              if(way==1)
  34   1              {
  35   2                      if(length<(9-lie%8))
  36   2                      {
  37   3                              for(i=lie%8;i<length+lie%8;i++)
  38   3                                      writecommand(foc==1?0xf8-i+7:0xf0-i+7);
  39   3                      }
  40   2                      else
  41   2                      {
  42   3                              for(i=lie%8+1;i<=8;i++)
  43   3                                      writecommand(foc==1?0xf8-i+8:0xf0-i+7);
  44   3                              address++; writeadd();
  45   3                              writecommand(0xb0);
  46   3                              for(i=0;i<(length+lie%8-8)/8;i++)
  47   3                                      writedata(foc==1?0xff:0x00);
  48   3                              writecommand(0xb2);
  49   3                              for(i=1;i<=(length+lie%8-8)%8;i++)
  50   3                                      writecommand(foc==1?0xf8-i+8:0xf0-i+8);
  51   3                      }
  52   2              }
  53   1              else if(way==2)
  54   1              {
  55   2                      for(i=0;i<length;i++)
C51 COMPILER V8.09   GRAPHIC2                                                              06/09/2010 21:45:55 PAGE 2   

  56   2                      {
  57   3                              writecommand(foc==1?0xff-lie%8:0xf8-lie%8);
  58   3                              address+=30;
  59   3                              writeadd();
  60   3                      }
  61   2              }
  62   1      }
  63          void drawonedot(uchar hang,uchar lie)
  64          {
  65   1              drawline(hang*4,lie*4,4,heng,fill);
  66   1              drawline(hang*4+1,lie*4,4,heng,fill);
  67   1              drawline(hang*4+2,lie*4,4,heng,fill);
  68   1              drawline(hang*4+3,lie*4,4,heng,fill);
  69   1      }
  70          void clearonedot(uchar hang,uchar lie)
  71          {
  72   1              drawline(hang*4,lie*4,4,heng,clear);
  73   1              drawline(hang*4+1,lie*4,4,heng,clear);
  74   1              drawline(hang*4+2,lie*4,4,heng,clear);
  75   1              drawline(hang*4+3,lie*4,4,heng,clear);  
  76   1      }
  77          void drawsnake(uchar hang,uchar lie)
  78          {
  79   1              uchar i;
  80   1              for(i=0;i<snakelength;i++)
  81   1              {
  82   2                      drawonedot(hang,lie+i);
  83   2              }
  84   1      }
  85          void movearray()
  86          {
  87   1              uchar i;
  88   1              for(i=0;i<snakelength-1;i++)
  89   1              {
  90   2                      position[i][0]=position[i+1][0];
  91   2                      position[i][1]=position[i+1][1];
  92   2              }
  93   1      }
  94          void writetoarray()
  95          {
  96   1              position[snakelength-1][0]=headhang;
  97   1              position[snakelength-1][1]=headlie;
  98   1      }
  99          void move(uchar way)
 100          {
 101   1              switch(way)
 102   1              {
 103   2                      case 1: --headhang; break;//up
 104   2                      case 2: ++headhang; break;//down
 105   2                      case 3: --headlie; break;//left
 106   2                      case 4: ++headlie; break;//right
 107   2              }
 108   1              if(headhang!=31&&headhang!=0&&headlie!=0&&headlie!=49)
 109   1              drawonedot(headhang,headlie);
 110   1              if(!addflag)
 111   1              {
 112   2                      clearonedot(position[0][0],position[0][1]);     
 113   2                      movearray();
 114   2              }
 115   1              writetoarray();
 116   1              addflag=0;
 117   1      }
C51 COMPILER V8.09   GRAPHIC2                                                              06/09/2010 21:45:55 PAGE 3   

 118          void food()
 119          {
 120   1              uchar i=0,j=1;
 121   1              while(1)
 122   1              {
 123   2                      foodx=rand()%32-2;
 124   2                      foody=rand()%50-2;
 125   2                      for(i=0;i<snakelength;i++)
 126   2                      {
 127   3                              if(foodx==position[i][0]&&foody==position[i][1])
 128   3                              {
 129   4                                      j=1;
 130   4                                      break;
 131   4                              }
 132   3                              else j=0;
 133   3                      }
 134   2                      if(j==0) break;
 135   2              }
 136   1              drawonedot(foodx,foody);
 137   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    793    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
