C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE 240_128_LCD
OBJECT MODULE PLACED IN 240_128_LCD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 240_128_LCD.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #define uchar unsigned char
   3          #define uint unsigned int 
   4          sbit rw=P3^6;//read write
   5          sbit rd=P3^7;
   6          sbit ce=P2^7;//chip enable
   7          sbit cd=P2^6;//code data
   8          sbit rst=P2^5;
   9          void delay(uint z)
  10          {
  11   1              uint i,j;
  12   1              for(i=z;i>0;i--)
  13   1                      for(j=110;j>0;j--);
  14   1      }
  15          /******************************************************************************
  16          *名称: WriteData()
  17          *功能: 液晶写数据程序，dat为要写入的数据
  18          ******************************************************************************/
  19          void WriteData(uchar dat)           //写数据    
  20          {   ce=1;
  21   1           cd=0;
  22   1          rw=0;
  23   1           P2=dat; 
  24   1              ce=0;
  25   1           rw=1;
  26   1      }   
  27          /******************************************************************************
  28          *名称: WriteComman()
  29          *功能: 液晶写命令程序，cmd为要写入的命令
  30          ******************************************************************************/
  31          void WriteCommand(uchar cmd)           //写命令    
  32          {   ce=1;
  33   1           cd=1;
  34   1           rw=0;
  35   1           P2=cmd;
  36   1              ce=0;
  37   1           rw=1;
  38   1      } 
  39          /******************************************************************************
  40          *名称: WriteDC()
  41          *功能: 液晶写1数据1命令程序，dat为要写入的数据，cmd为要写入的命令
  42          ******************************************************************************/
  43          void WriteDC(uchar dat,uchar cmd)      //写一个数据和一个指令 
  44          {   
  45   1           WriteData(dat);   
  46   1           WriteCommand(cmd);   
  47   1      } 
  48          /******************************************************************************
  49          *名称: WriteDDC()
  50          *功能: 液晶写2数据1命令程序，data为要写入的数据，cmd为要写入的命令
  51          ******************************************************************************/
  52          void WriteDDC(uchar data1, uchar data2, uchar cmd)   //写两个数据和一个指令 
  53          {   
  54   1           WriteData(data1);         
  55   1           WriteData(data2);   
C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 2   

  56   1           WriteCommand(cmd);     
  57   1      }   
  58          /******************************************************************************
  59          *名称: LCD_Init()
  60          *功能: 液晶初始化程序
  61          *      初始地址设置好后，在不同的地址段相同WriteData()输出不同
  62          ******************************************************************************/
  63          void LCD_Init(void)         //液晶初始化 
  64          {   
  65   1           uchar data1,data2,cmd;    
  66   1                      rw=1;
  67   1              
  68   1           /*********************设置文本显示*****************************/   
  69   1           data1 = 0x00;   
  70   1           data2 = 0x10;              //图形显示占用32*128=0xfff，故文本从0x1000开始
  71   1           cmd = 0x40;                //设置文本显示区首地址    
  72   1           WriteDDC(data1,data2,cmd);   
  73   1           data1 = 0x20;              //可以整屏显示
  74   1           data2 = 0x00;   
  75   1           cmd = 0x41;                //设置文本显示区宽度    
  76   1           WriteDDC(data1,data2,cmd);   
  77   1           data1 = 0x00;   
  78   1           data2 = 0x00;   
  79   1           cmd = 0x42;                //设置图形显示区首地址    
  80   1           WriteDDC(data1,data2,cmd);   
  81   1           data1 = 0x20;   
  82   1           data2 = 0x00;   
  83   1           cmd = 0x43;                //设置图形显示区宽度    
  84   1           WriteDDC(data1,data2,cmd); 
  85   1         cmd =0xa2;                 //设置光标形状 
  86   1         WriteCommand(cmd); 
  87   1           cmd = 0x80;                //显示方式设置
  88   1                                    //启用外部字符发生器,显示方式是文本与图形与 
  89   1           WriteCommand(cmd); 
  90   1           cmd = 0x9e;                //启用光标闪烁,光标不显示,文本显示与图形显示    
  91   1           WriteCommand(cmd);   
  92   1      }
  93          uchar code Photo_code[] = {   
  94          /*---- 图片文件来自：【C:\Documents and Settings\Administrator\桌面\0U95aA3-4.jpg】 ----*/
  95          /*---- 图片宽度：96     图片高度：93 ----*/
  96          /*---- 本数据文件建立日期：202009-11-12; 建立时间：20:13:38 ----*/
  97          /*---- 本数据文件由PICtoCODE【图片数据生成器】V1.0自动生成！ ----*/
  98          0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 
  99          0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 
 100          0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 
 101          0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 
 102          0x00, 0x00, 0x00, 0x20, 0x03, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 
 103          0x00, 0x00, 0x00, 0x60, 0x13, 0x0D, 0x0C, 0x60, 0x06, 0x00, 0x00, 0x00, 
 104          0x00, 0x00, 0x00, 0x80, 0x33, 0x0F, 0x08, 0x6C, 0x00, 0x80, 0x00, 0x00, 
 105          0x00, 0x00, 0x06, 0x00, 0x11, 0x0B, 0x08, 0x4C, 0x00, 0x40, 0x00, 0x00, 
 106          0x00, 0x00, 0x0C, 0x00, 0x19, 0x09, 0x18, 0x08, 0x60, 0x20, 0x00, 0x00, 
 107          0x00, 0x00, 0x10, 0x00, 0x0B, 0x00, 0x18, 0x30, 0x78, 0x08, 0x00, 0x00, 
 108          0x00, 0x00, 0x20, 0x00, 0x0E, 0x00, 0x00, 0x20, 0xC8, 0x0C, 0x00, 0x00, 
 109          0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x02, 0x00, 0x00, 
 110          0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x01, 0x00, 0x00, 
 111          0x00, 0x03, 0x01, 0xC0, 0x00, 0x60, 0x0A, 0x00, 0x70, 0xE0, 0x80, 0x00, 
 112          0x00, 0x00, 0x01, 0x60, 0x03, 0x00, 0x00, 0x80, 0x21, 0xB0, 0x40, 0x00, 
 113          0x00, 0x0C, 0x01, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x20, 0x00, 
 114          0x00, 0x08, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x02, 0xF0, 0x10, 0x00, 
 115          0x00, 0x10, 0x30, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x08, 0x00, 
 116          0x00, 0x20, 0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x40, 0xC3, 0x0C, 0x00, 
 117          0x00, 0x01, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x84, 0x00, 
C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 3   

 118          0x00, 0x40, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0A, 0xC0, 0x00, 
 119          0x00, 0x80, 0x68, 0x20, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1B, 0xC1, 0x00, 
 120          0x01, 0x00, 0x30, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x01, 0x80, 
 121          0x00, 0x08, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x80, 
 122          0x02, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x80, 0x00, 0x00, 
 123          0x02, 0x07, 0x02, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x38, 0x40, 
 124          0x04, 0x35, 0x80, 0x60, 0x03, 0x18, 0x70, 0x00, 0x00, 0x00, 0xE0, 0x40, 
 125          0x00, 0x38, 0x04, 0x67, 0x33, 0x98, 0x70, 0x00, 0x00, 0x00, 0xC0, 0x20, 
 126          0x00, 0x1E, 0x0C, 0x67, 0x73, 0x98, 0x3C, 0x1F, 0xFC, 0x00, 0x06, 0x00, 
 127          0x08, 0x02, 0x1C, 0x67, 0x73, 0xB8, 0x1F, 0xFF, 0xFF, 0x08, 0x02, 0x10, 
 128          0x18, 0x00, 0x0F, 0x7F, 0x3F, 0xF8, 0x0F, 0xFF, 0xFF, 0x80, 0x07, 0x10, 
 129          0x11, 0xC0, 0x0F, 0xFC, 0x1F, 0xE0, 0x00, 0x00, 0x01, 0xC0, 0x1F, 0x98, 
 130          0x11, 0xE0, 0x43, 0xF8, 0x37, 0x80, 0x00, 0x00, 0x01, 0xC0, 0x39, 0x88, 
 131          0x00, 0x1C, 0x40, 0x60, 0xF3, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x08, 
 132          0x00, 0x08, 0x00, 0x60, 0xE1, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x08, 
 133          0x20, 0x00, 0x00, 0x61, 0xC3, 0x80, 0x0E, 0x00, 0x00, 0x01, 0x00, 0x00, 
 134          0x22, 0x00, 0x00, 0xE1, 0xC3, 0xC0, 0x1C, 0x00, 0x00, 0x01, 0x00, 0xC0, 
 135          0x43, 0x30, 0x0F, 0xFF, 0xFE, 0xFE, 0x1E, 0x3F, 0xF8, 0x00, 0x01, 0x84, 
 136          0x61, 0xF1, 0x1F, 0x1F, 0xFD, 0x7E, 0x0F, 0xFF, 0xFE, 0x00, 0x0F, 0x04, 
 137          0x67, 0xC0, 0x1C, 0xE1, 0xC3, 0x80, 0x07, 0xFF, 0xBF, 0x80, 0x0C, 0x64, 
 138          0x46, 0x61, 0x00, 0xE0, 0xC3, 0xC0, 0x00, 0x00, 0x03, 0x80, 0x80, 0x00, 
 139          0x40, 0x20, 0x01, 0xFD, 0xCF, 0xFE, 0x00, 0x00, 0x01, 0xC0, 0x80, 0x02, 
 140          0x40, 0x00, 0x0F, 0xFF, 0xFE, 0xFE, 0x01, 0xFF, 0x81, 0xC0, 0x00, 0x02, 
 141          0x40, 0x02, 0x1F, 0x1F, 0xF8, 0x00, 0x07, 0xFF, 0xE1, 0xC0, 0x00, 0x02, 
 142          0x40, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x0F, 0x07, 0xF1, 0xC0, 0x00, 0x02, 
 143          0x40, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x1F, 0x8F, 0x71, 0xC0, 0x00, 0x02, 
 144          0x40, 0x02, 0x00, 0xFF, 0xFF, 0xE0, 0x1D, 0xDC, 0x71, 0xC0, 0x00, 0x02, 
 145          0x40, 0x02, 0x00, 0xFF, 0xFF, 0xC0, 0x1C, 0xFC, 0x71, 0xC0, 0x00, 0x02, 
 146          0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xF0, 0xF1, 0xC0, 0x00, 0x02, 
 147          0x40, 0x00, 0x07, 0xFF, 0xFF, 0xFC, 0x18, 0xF1, 0xF1, 0xC0, 0x00, 0x02, 
 148          0x40, 0x00, 0x1F, 0xFF, 0xFF, 0xFE, 0x1B, 0xFF, 0xB1, 0xC0, 0x00, 0x02, 
 149          0x40, 0x01, 0x1F, 0x81, 0xC0, 0x10, 0x1F, 0x9F, 0x31, 0xC0, 0x80, 0x00, 
 150          0x40, 0x01, 0x00, 0x00, 0xC0, 0x00, 0x1F, 0x1E, 0x31, 0xC0, 0x00, 0x04, 
 151          0x60, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x1E, 0x3E, 0x31, 0xC0, 0x00, 0x04, 
 152          0x20, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x1C, 0x7F, 0x71, 0xC0, 0x00, 0x04, 
 153          0x20, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1C, 0xF3, 0xF1, 0xC1, 0x00, 0x00, 
 154          0x20, 0x00, 0x00, 0x00, 0x07, 0x00, 0x1D, 0xE3, 0xF1, 0xC1, 0x00, 0x00, 
 155          0x00, 0x00, 0x80, 0x00, 0x07, 0x00, 0x0F, 0x81, 0xE1, 0xC0, 0x00, 0x00, 
 156          0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x0F, 0x81, 0xE1, 0xC2, 0x00, 0x08, 
 157          0x10, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0xFF, 0xC1, 0xE0, 0x00, 0x08, 
 158          0x10, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x01, 0xFF, 0x00, 0xE0, 0x00, 0x08, 
 159          0x18, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x00, 0x10, 
 160          0x08, 0x00, 0x20, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x10, 
 161          0x08, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 
 162          0x00, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x20, 
 163          0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x20, 
 164          0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 
 165          0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
 166          0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
 167          0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
 168          0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 
 169          0x00, 0xC0, 0x30, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x02, 0x00, 
 170          0x00, 0x40, 0x6C, 0x08, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x06, 0x00, 
 171          0x00, 0x20, 0x8D, 0x00, 0x00, 0x20, 0x04, 0x00, 0x01, 0x97, 0xC4, 0x00, 
 172          0x00, 0x10, 0x3B, 0x00, 0x00, 0x60, 0x6E, 0x00, 0x80, 0xFF, 0x88, 0x00, 
 173          0x00, 0x08, 0x3D, 0x00, 0x80, 0x62, 0xEF, 0x01, 0x00, 0xE7, 0x10, 0x00, 
 174          0x00, 0x0C, 0x4C, 0x00, 0x00, 0x46, 0x70, 0x00, 0x00, 0x70, 0x30, 0x00, 
 175          0x00, 0x04, 0x08, 0x06, 0x06, 0x00, 0x00, 0x40, 0x00, 0x30, 0x40, 0x00, 
 176          0x00, 0x00, 0x08, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x70, 0x30, 0x80, 0x00, 
 177          0x00, 0x01, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0xD8, 0x01, 0x00, 0x00, 
 178          0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x7A, 0x01, 0x00, 0x00, 
 179          0x00, 0x00, 0x40, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x04, 0x00, 0x00, 
C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 4   

 180          0x00, 0x00, 0x30, 0x7F, 0x00, 0x18, 0x03, 0x40, 0xF8, 0x0C, 0x00, 0x00, 
 181          0x00, 0x00, 0x0C, 0x0C, 0x03, 0xF6, 0x27, 0xC0, 0x78, 0x30, 0x00, 0x00, 
 182          0x00, 0x00, 0x06, 0x04, 0x03, 0xFE, 0x07, 0xC0, 0xC0, 0x60, 0x00, 0x00, 
 183          0x00, 0x00, 0x01, 0x87, 0x03, 0xF6, 0x53, 0xC0, 0x01, 0x80, 0x00, 0x00, 
 184          0x00, 0x00, 0x00, 0xC0, 0x00, 0x3C, 0x13, 0xC0, 0x06, 0x00, 0x00, 0x00, 
 185          0x00, 0x00, 0x00, 0x18, 0x00, 0xC4, 0x17, 0x60, 0x18, 0x00, 0x00, 0x00, 
 186          0x00, 0x00, 0x00, 0x0E, 0x00, 0x84, 0x35, 0xE0, 0x60, 0x00, 0x00, 0x00, 
 187          0x00, 0x00, 0x00, 0x02, 0xC0, 0x04, 0x20, 0x00, 0x80, 0x00, 0x00, 0x00, 
 188          0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 
 189          0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 
 190          0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 
 191          /*---- 图片文件来自：【C:\Documents and Settings\Administrator\桌面\0710212117359106xhdx.jpg】 ----*/
 192          /*---- 图片宽度：96     图片高度：27 ----*/
 193          /*---- 本数据文件建立日期：202009-11-12; 建立时间：20:30:35 ----*/
 194          /*---- 本数据文件由PICtoCODE【图片数据生成器】V1.0自动生成！ ----*/
 195          0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
 196          0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
 197          0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0E, 
 198          0x00, 0x00, 0x00, 0x00, 0x20, 0x60, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE6, 
 199          0x00, 0x00, 0x00, 0x00, 0x30, 0xC0, 0x00, 0x06, 0x00, 0x00, 0x07, 0xCC, 
 200          0x00, 0x00, 0x00, 0x00, 0x16, 0x80, 0x00, 0x07, 0x00, 0x00, 0x21, 0x88, 
 201          0x00, 0x00, 0x0C, 0x00, 0x3D, 0x00, 0x00, 0x03, 0x00, 0x00, 0x33, 0x18, 
 202          0x00, 0x03, 0xFC, 0x00, 0x7B, 0x48, 0x00, 0x03, 0x00, 0x00, 0x1E, 0x30, 
 203          0x00, 0x7C, 0x70, 0x00, 0x3B, 0xF8, 0x00, 0x03, 0x00, 0x00, 0x9F, 0x70, 
 204          0x07, 0xE0, 0x00, 0x00, 0x11, 0xF8, 0x00, 0x03, 0x80, 0x00, 0xED, 0x00, 
 205          0x07, 0xB0, 0x00, 0x00, 0x01, 0xF2, 0x00, 0x03, 0x30, 0x00, 0xC0, 0x60, 
 206          0x00, 0x1C, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x03, 0x70, 0x00, 0x01, 0x60, 
 207          0x00, 0x1C, 0x70, 0x00, 0x0F, 0xFC, 0x00, 0x03, 0xE0, 0x00, 0x04, 0x60, 
 208          0x00, 0x0E, 0xF0, 0x00, 0x7F, 0xF8, 0x00, 0x03, 0xC0, 0x00, 0x08, 0x80, 
 209          0x02, 0x1F, 0xF0, 0x00, 0x7B, 0xE0, 0x00, 0x07, 0x80, 0x00, 0x30, 0x3C, 
 210          0x02, 0x1E, 0xF0, 0x00, 0xF7, 0xF0, 0x00, 0x1F, 0x00, 0x00, 0xC0, 0xFC, 
 211          0x03, 0x3D, 0xE0, 0x00, 0x7B, 0xF8, 0x00, 0xFF, 0x00, 0x03, 0x83, 0xFC, 
 212          0x01, 0xF9, 0xC0, 0x00, 0x3B, 0x38, 0x03, 0xC7, 0x00, 0x1F, 0x8F, 0xF0, 
 213          0x03, 0xBF, 0x80, 0x00, 0xE3, 0xF0, 0x1F, 0x8E, 0x00, 0x1E, 0x3F, 0xC0, 
 214          0x03, 0xFF, 0x80, 0x03, 0x87, 0x80, 0x0F, 0x0E, 0x10, 0x00, 0x0F, 0x00, 
 215          0x29, 0xFF, 0x00, 0x07, 0x0F, 0x00, 0x00, 0x1C, 0x18, 0x00, 0x03, 0x00, 
 216          0x60, 0x60, 0x00, 0x1C, 0x03, 0x00, 0x00, 0x30, 0x1C, 0x00, 0x03, 0x00, 
 217          0x60, 0x7C, 0x00, 0x78, 0x01, 0x00, 0x00, 0xE0, 0x0C, 0x00, 0x03, 0x00, 
 218          0x70, 0x1C, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 
 219          0x30, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 
 220          0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 
 221          0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 
 222          };
 223          #define CG_length 352
 224          uchar code CG_code[] = {   
 225          0x00,0x00,0x7F,0x03,0x03,0x23,0x3F,0x33,0x33,0x33,0x36,0x38,0x30,0x3F,0x30,0x20,
 226                0x00,0x02,0xFF,0x60,0x60,0x62,0xFF,0x66,0x66,0x7E,0x3E,0x06,0x06,0xFE,0x06,0x04,//"西",
 227          0x04,0x06,0x0C,0x08,0x1C,0x3C,0x4C,0x0D,0x0C,0x09,0x01,0x7F,0x01,0x01,0x01,0x01,
 228                0x40,0x68,0x6C,0x78,0x70,0xE0,0xE4,0x64,0x7E,0xBC,0x82,0xFF,0x80,0x80,0x80,0x80,//"华",
 229          0x01,0x01,0x01,0x01,0x01,0x3F,0x01,0x01,0x03,0x03,0x06,0x06,0x0C,0x18,0x30,0x40,
 230                0x00,0x80,0x80,0x80,0x84,0xFE,0x80,0xC0,0x40,0x60,0x20,0x30,0x18,0x0E,0x07,0x02,//"大",
 231          0x09,0x0D,0x14,0x3F,0x70,0x20,0x07,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x03,0x00,
 232                0x10,0x98,0xB2,0xFF,0x06,0x24,0xF0,0x60,0xC0,0xC4,0xFE,0xC0,0xC0,0xC0,0xC0,0x80,//"学",
 233          0x08,0x06,0x12,0x1F,0x19,0x19,0x1F,0x19,0x19,0x1F,0x01,0x7F,0x01,0x01,0x01,0x01,
 234                0x30,0x60,0xC8,0xFC,0x98,0x98,0xF8,0x98,0x98,0xF8,0x84,0xFE,0x80,0x80,0x80,0x80,//"单",
 235          0x00,0x10,0x18,0x18,0x1F,0x18,0x18,0x18,0x1F,0x18,0x18,0x30,0x30,0x20,0x40,0x00,
 236                0x40,0x60,0x60,0x62,0xFF,0x00,0x00,0x10,0xF8,0x30,0x30,0x30,0x30,0x30,0x30,0x30,//"片",
 237          0x10,0x19,0x19,0x19,0x7F,0x19,0x39,0x3D,0x3F,0x5B,0x59,0x19,0x19,0x1B,0x1A,0x14,
 238                0x00,0x08,0xFC,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x1A,0x1A,0x1F,0x0E,//"机",
 239          0x00,0x03,0x1C,0x06,0x12,0x3F,0x73,0x2F,0x03,0x07,0x07,0x0D,0x08,0x11,0x23,0x0C,
 240                0x18,0xFC,0x90,0xD8,0xB2,0xFF,0x06,0xFC,0x08,0xFC,0x18,0xB0,0xE0,0xB8,0x1F,0x06,//"爱",
 241          0x08,0x0C,0x0C,0x18,0x1A,0x7F,0x1B,0x1B,0x36,0x36,0x1C,0x0E,0x1B,0x33,0x22,0x40,
C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 5   

 242                0x02,0xFF,0x06,0x0C,0x10,0x18,0x1A,0xFF,0x18,0x18,0x18,0x18,0x18,0x58,0x38,0x10,//"好",
 243          0x01,0x01,0x1F,0x01,0x01,0x01,0x7F,0x03,0x0F,0x1C,0x6C,0x0F,0x0C,0x0C,0x0F,0x08,
 244                0x80,0xA4,0xF6,0x8C,0x98,0xE2,0xFF,0x08,0xFC,0x18,0x18,0xF8,0x18,0x18,0xF8,0x10,// "者",
 245             0x30,0x30,0x31,0x33,0x36,0x3C,0x38,0xFF,0xFF,0x38,0x3C,0x36,0x33,0x31,0x30,0x30,
 246                0x70,0xF0,0xF0,0x30,0x30,0x30,0x30,0xFF,0xFF,0x30,0x30,0x30,0x30,0xF0,0xF0,0x70 //图标
 247             } ;
 248          /******************************************************************************
 249          *名称: Write_Str()
 250          *功能: 液晶写字符程序，显示ASCII字符，row为行(0~15),rol为列(0~29)
 251          *      显示ASCII字符为8*8点阵（屏为240*128点阵）
 252          ******************************************************************************/
 253          void Write_Str(uchar row,uchar rol,uchar str)
 254          {
 255   1      uint addres;
 256   1      uchar data1,data2;
 257   1      addres=row*32+rol+0x1000;
 258   1      data2=addres>>8;
 259   1      data1=addres;
 260   1      WriteDDC(data1,data2,0x24);
 261   1      WriteCommand(0xb0);
 262   1      WriteData(str);
 263   1      WriteCommand(0xb2);
 264   1      }
 265          /******************************************************************************
 266          *名称: Write_Photo()
 267          *功能: 液晶画图程序，row为图片开始行(0~127)，rol为图片开始列(0~29)，
 268          *      width为图片长（单位Bit）,deep 为图片宽（单位bit）
 269          ******************************************************************************/
 270          void Write_Photo(uchar row,uchar rol,uchar width,uchar deep)
 271          {
 272   1      uint address,Photolength,i;
 273   1      uchar j,data1,data2,cmd;
 274   1      Photolength=width*deep;
 275   1      address = row*32+rol;
 276   1      data1 = address;                 //取地址低八位    
 277   1      data2 = address>>8;                //取地址高八位    
 278   1      cmd = 0x24; 
 279   1      WriteDDC(data1,data2,cmd);
 280   1      WriteCommand(0xb0);//自动写模式
 281   1      for(i=0;i<Photolength;i++)
 282   1      {
 283   2      WriteData(Photo_code[i]);
 284   2      j++;
 285   2      if(j==width)
 286   2      { 
 287   3      WriteCommand(0xb2);           //退出自动写模式
 288   3          address=address+32;
 289   3          data1 = address;                 //取地址低八位    
 290   3          data2 = address>>8;                //取地址高八位    
 291   3          cmd = 0x24; 
 292   3          WriteDDC(data1,data2,cmd);
 293   3          j=0;
 294   3          WriteCommand(0xb0);         //进入自动写模式
 295   3          }
 296   2         }
 297   1         WriteCommand(0xb2);
 298   1      }
 299          /******************************************************************************
 300          *名称: Write_Chinese()
 301          *功能: 液晶写汉字程序，row为汉字开始行，rol为汉字开始列，Chinese为汉字字符串在
 302          *      CGRAM中的初地址 ，length为汉字字符串的长度，（一个16*16点阵的汉字长度为4）
 303          ******************************************************************************/
C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 6   

 304          void SetCGRAM(void)   
 305          {       
 306   1           uchar data1,data2,cmd;   
 307   1           uint i; 
 308   1           data1 = 0x03;   
 309   1           data2 = 0x00;                  //设置偏移地址寄存器 
 310   1           cmd = 0x22;                       
 311   1           WriteDDC(data1,data2,cmd);   
 312   1           data1 = 0x00;   
 313   1           data2 = 0x1c;   
 314   1           cmd = 0x24;                   //设置地址指针    
 315   1           WriteDDC(data1,data2,cmd);   
 316   1           cmd = 0xb0;                   //进入自动写模式    
 317   1           WriteCommand(cmd);   
 318   1           for (i = 0;i < CG_length; ++i)   
 319   1           {      
 320   2               WriteData(CG_code[i]);     
 321   2           }   
 322   1           cmd = 0xb2;                   //退出自动写模式    
 323   1           WriteCommand(cmd);       
 324   1      }
 325          /******************************************************************************
 326          *名称: Write_Chinese()
 327          *功能: 液晶写汉字程序，row为汉字开始行(0~15)，rol为汉字开始列(0~29)，
 328          *      Chinese为汉字字符串在CGRAM中的初地址 ，
 329          *      length为汉字字符串的长度，（一个16*16点阵的汉字长度为4）
 330          ******************************************************************************/
 331          void Write_Chinese(uchar row,uchar rol,uchar Chinese,uchar length) // 0x80 0x82 0x84 86     
 332          {                                                                    // 0x81 0x83 0x85 87    
 333   1           uchar data1,data2,cmd;   
 334   1           uchar i;   
 335   1           uint address;   
 336   1           /****************先写汉字上半部分*********************************/   
 337   1           address = row * 32 + rol+0x1000;   
 338   1           data1 = address;                 //取地址低八位    
 339   1           data2 = address>>8;                //取地址高八位    
 340   1           cmd = 0x24;                      //设置地址指针,字符显示首位置    
 341   1           WriteDDC(data1,data2,cmd);   
 342   1           cmd = 0xb0;                      //进去自动写模式    
 343   1           WriteCommand(cmd); 
 344   1         for(i=0;i<length;i++)
 345   1         {
 346   2          WriteData(Chinese+i);
 347   2          i++;
 348   2         }
 349   1         cmd = 0xb2;                     //退出自动写模式    
 350   1           WriteCommand(cmd);    
 351   1         /****************再写汉字下半部分*********************************/   
 352   1           address = address+32;   
 353   1           data1 = address;                 //取地址低八位    
 354   1           data2 = address>>8;                //取地址高八位    
 355   1           cmd = 0x24;                      //设置地址指针,字符显示首位置    
 356   1           WriteDDC(data1,data2,cmd);   
 357   1           cmd = 0xb0;                      //进去自动写模式    
 358   1           WriteCommand(cmd); 
 359   1         for(i=1;i<length;i++)
 360   1         {
 361   2          WriteData(Chinese+i);
 362   2          i++;
 363   2         }
 364   1         cmd = 0xb2;                     //退出自动写模式    
 365   1           WriteCommand(cmd); 
C51 COMPILER V8.09   240_128_LCD                                                           05/14/2010 20:28:37 PAGE 7   

 366   1      }
 367          /******************************************************************************
 368          *名称: main()
 369          *功能: 主函数，画图，写汉字，写汉字前应设置CGRAM
 370          ******************************************************************************/
 371          void main(void)   
 372          {   
 373   1      //   rst=0;
 374   1      //   delay(10);
 375   1      //   rst=1;
 376   1         LCD_Init();
 377   1         SetCGRAM();
 378   1         Write_Photo(1,2,12,120);
 379   1         Write_Chinese(3,19,0x80,16) ;
 380   1         Write_Chinese(6,17,0x90,24) ;
 381   1         Write_Chinese(9,22,0xa8,4) ;
 382   1         while(1);
 383   1      }
 384          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    544    ----
   CONSTANT SIZE    =   1792    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
