C51 COMPILER V8.09   CG_RAM                                                                05/16/2010 15:43:07 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE CG_RAM
OBJECT MODULE PLACED IN CG_RAM.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CG_RAM.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include<reg52.h>
   3          #define uchar unsigned char
   4          #define uint unsigned int 
   5          sbit ce=P2^7;
   6          sbit rw=P3^6;
   7          sbit rd=P3^7;
   8          sbit cd=P2^6;
   9          sbit rst=P2^5;
  10          uint address;
  11          uchar data1,data2,cmd;
  12          uchar code table[]={/*--  文字:  我  --*/
  13          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  14          0x04,0x40,0x0E,0x50,0x78,0x48,0x08,0x48,0x08,0x40,0xFF,0xFE,0x08,0x40,0x08,0x44,
  15          0x0A,0x44,0x0C,0x48,0x18,0x30,0x68,0x22,0x08,0x52,0x08,0x8A,0x2B,0x06,0x10,0x02,
  16          
  17          /*--  文字:  人  --*/
  18          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  19          0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x02,0x80,0x02,0x80,
  20          0x04,0x40,0x04,0x40,0x08,0x20,0x08,0x20,0x10,0x10,0x20,0x08,0x40,0x04,0x80,0x02,
  21          
  22          /*--  文字:  有  --*/
  23          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  24          0x02,0x00,0x02,0x00,0xFF,0xFE,0x04,0x00,0x04,0x00,0x0F,0xF0,0x08,0x10,0x18,0x10,
  25          0x2F,0xF0,0x48,0x10,0x88,0x10,0x0F,0xF0,0x08,0x10,0x08,0x10,0x08,0x50,0x08,0x20,
  26          
  27          /*--  文字:  的  --*/
  28          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  29          0x10,0x40,0x10,0x40,0x20,0x40,0x7E,0x7C,0x42,0x84,0x42,0x84,0x43,0x04,0x42,0x44,
  30          0x7E,0x24,0x42,0x24,0x42,0x04,0x42,0x04,0x42,0x04,0x7E,0x04,0x42,0x28,0x00,0x10,
  31          
  32          /*--  文字:  和  --*/
  33          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  34          0x04,0x00,0x0E,0x00,0x78,0x00,0x08,0x7C,0x08,0x44,0xFF,0x44,0x08,0x44,0x18,0x44,
  35          0x1C,0x44,0x2A,0x44,0x2A,0x44,0x48,0x44,0x88,0x7C,0x08,0x44,0x08,0x00,0x08,0x00,
  36          
  37          /*--  文字:  主  --*/
  38          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  39          0x02,0x00,0x01,0x00,0x00,0x00,0x7F,0xFC,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
  40          0x3F,0xF8,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,
  41          
  42          /*--  文字:  产  --*/
  43          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  44          0x02,0x00,0x01,0x00,0x7F,0xFC,0x00,0x00,0x08,0x20,0x04,0x20,0x04,0x40,0x3F,0xFE,
  45          0x20,0x00,0x20,0x00,0x20,0x00,0x20,0x00,0x20,0x00,0x40,0x00,0x40,0x00,0x80,0x00,
  46          
  47          /*--  文字:  不  --*/
  48          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  49          0x00,0x00,0x7F,0xFC,0x00,0x80,0x00,0x80,0x01,0x00,0x01,0x00,0x03,0x40,0x05,0x20,
  50          0x09,0x10,0x11,0x08,0x21,0x04,0x41,0x04,0x81,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
  51          
  52          /*--  文字:  为  --*/
  53          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  54          0x01,0x00,0x21,0x00,0x11,0x00,0x11,0x00,0x01,0x00,0x7F,0xF8,0x02,0x08,0x02,0x08,
  55          0x02,0x88,0x04,0x48,0x04,0x48,0x08,0x08,0x10,0x08,0x20,0x08,0x40,0x50,0x80,0x20,
C51 COMPILER V8.09   CG_RAM                                                                05/16/2010 15:43:07 PAGE 2   

  56          
  57          /*--  文字:  这  --*/
  58          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  59          0x00,0x80,0x20,0x40,0x10,0x40,0x17,0xFC,0x00,0x10,0x02,0x10,0xF1,0x20,0x10,0xA0,
  60          0x10,0x40,0x10,0xA0,0x11,0x10,0x12,0x08,0x14,0x08,0x28,0x00,0x47,0xFE,0x00,0x00,
  61          
  62          /*--  文字:  工  --*/
  63          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  64          0x00,0x00,0x00,0x00,0x7F,0xFC,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
  65          0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,
  66          
  67          /*--  文字:  要  --*/
  68          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  69          0x00,0x00,0x7F,0xFC,0x04,0x40,0x04,0x40,0x3F,0xF8,0x24,0x48,0x24,0x48,0x3F,0xF8,
  70          0x02,0x00,0x7F,0xFC,0x04,0x20,0x08,0x40,0x1C,0x80,0x03,0x80,0x06,0x70,0x38,0x08,
  71          
  72          /*--  文字:  在  --*/
  73          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  74          0x02,0x00,0x02,0x00,0x04,0x00,0xFF,0xFE,0x08,0x00,0x08,0x40,0x10,0x40,0x30,0x40,
  75          0x57,0xFC,0x90,0x40,0x10,0x40,0x10,0x40,0x10,0x40,0x10,0x40,0x1F,0xFE,0x10,0x00,
  76          
  77          /*--  文字:  地  --*/
  78          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  79          0x10,0x20,0x10,0x20,0x10,0x20,0x11,0x20,0x11,0x2C,0xFD,0x34,0x11,0x64,0x13,0xA4,
  80          0x11,0x24,0x11,0x34,0x11,0x28,0x1D,0x22,0xE1,0x22,0x41,0x02,0x00,0xFE,0x00,0x00,
  81          
  82          /*--  文字:  一  --*/
  83          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  84          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFE,
  85          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  86          
  87          /*--  文字:  上  --*/
  88          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  89          0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x03,0xF8,0x02,0x00,
  90          0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0xFF,0xFE,0x00,0x00,
  91          
  92          /*--  文字:  是  --*/
  93          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  94          0x1F,0xF0,0x10,0x10,0x10,0x10,0x1F,0xF0,0x10,0x10,0x10,0x10,0x1F,0xF0,0x00,0x00,
  95          0xFF,0xFE,0x01,0x00,0x11,0x00,0x11,0xF8,0x11,0x00,0x29,0x00,0x45,0x00,0x83,0xFE,
  96          
  97          /*--  文字:  中  --*/
  98          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
  99          0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,
 100          0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x08,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
 101          
 102          /*--  文字:  国  --*/
 103          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 104          0x00,0x00,0x7F,0xFC,0x40,0x04,0x40,0x04,0x5F,0xF4,0x41,0x04,0x41,0x04,0x4F,0xE4,
 105          0x41,0x04,0x41,0x44,0x41,0x24,0x5F,0xF4,0x40,0x04,0x40,0x04,0x7F,0xFC,0x40,0x04,
 106          
 107          /*--  文字:  经  --*/
 108          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 109          0x10,0x00,0x11,0xFC,0x20,0x08,0x24,0x10,0x44,0x30,0xF8,0x48,0x10,0x84,0x23,0x02,
 110          0x40,0x00,0xFD,0xFC,0x40,0x20,0x00,0x20,0x1C,0x20,0xE0,0x20,0x43,0xFE,0x00,0x00,
 111          
 112          /*--  文字:  以  --*/
 113          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 114          0x00,0x10,0x04,0x10,0x22,0x10,0x21,0x10,0x21,0x10,0x20,0x10,0x20,0x10,0x20,0x20,
 115          0x20,0x20,0x20,0x20,0x24,0x40,0x28,0x50,0x30,0x88,0x21,0x04,0x02,0x02,0x04,0x02,
 116          
 117          /*--  文字:  发  --*/
C51 COMPILER V8.09   CG_RAM                                                                05/16/2010 15:43:07 PAGE 3   

 118          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 119          0x01,0x00,0x11,0x10,0x11,0x08,0x22,0x00,0x3F,0xFC,0x02,0x00,0x04,0x00,0x07,0xF8,
 120          0x0A,0x08,0x09,0x08,0x11,0x10,0x10,0xA0,0x20,0x40,0x40,0xA0,0x03,0x18,0x1C,0x06,
 121          
 122          /*--  文字:  了  --*/
 123          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 124          0x00,0x00,0x7F,0xF8,0x00,0x10,0x00,0x20,0x00,0x40,0x01,0x80,0x01,0x00,0x01,0x00,
 125          0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x05,0x00,0x02,0x00,
 126          
 127          /*--  文字:  民  --*/
 128          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 129          0x00,0x00,0x3F,0xF8,0x20,0x08,0x20,0x08,0x20,0x08,0x3F,0xF8,0x20,0x80,0x20,0x80,
 130          0x3F,0xFC,0x20,0x80,0x20,0x40,0x20,0x40,0x24,0x24,0x28,0x14,0x30,0x0C,0x20,0x04,
 131          
 132          /*--  文字:  同  --*/
 133          /*--  宋体12;  此字体下对应的点阵为：宽x高=16x16   --*/
 134          0x00,0x00,0x3F,0xFC,0x20,0x04,0x20,0x04,0x2F,0xF4,0x20,0x04,0x20,0x04,0x27,0xE4,
 135          0x24,0x24,0x24,0x24,0x24,0x24,0x27,0xE4,0x24,0x24,0x20,0x04,0x20,0x14,0x20,0x08,
 136          
 137          };
 138          void clear();
 139          void delay(uint z)              //毫秒级延时
 140          {
 141   1              uint i,j;
 142   1              for(i=z;i>0;i--)
 143   1                      for(j=110;j>0;j--);
 144   1      }
 145          void delayus(uint z)    //微秒级延时
 146          {
 147   1              while(z--);
 148   1      }
 149          void WriteData(uchar dat)           //写数据    
 150          {    ce=1;
 151   1           cd=0;
 152   1          rw=0;
 153   1           P0=dat; 
 154   1         delayus(10);
 155   1      
 156   1              ce=0;
 157   1           rw=1;
 158   1      }   
 159          void WriteCommand(uchar cmd)           //写命令    
 160          {   ce=1;
 161   1           cd=1;
 162   1           rw=0;
 163   1           P0=cmd;
 164   1      delayus(10);
 165   1              ce=0;
 166   1           rw=1;
 167   1      } 
 168          void WriteDC(uchar dat,uchar cmd)      //写一个数据和一个指令 
 169          {   
 170   1           WriteData(dat);   
 171   1           WriteCommand(cmd);   
 172   1      } 
 173          void WriteDDC(uchar data1, uchar data2, uchar cmd)   //写两个数据和一个指令 
 174          {   
 175   1           WriteData(data1);         
 176   1           WriteData(data2);   
 177   1           WriteCommand(cmd);     
 178   1      }   
 179          void clear()    //清屏
C51 COMPILER V8.09   CG_RAM                                                                05/16/2010 15:43:07 PAGE 4   

 180          {
 181   1              uint i;
 182   1              WriteCommand(0xb2);
 183   1              data1 = 0x00;                 //取地址低八位    
 184   1              data2 = 0x00;                //取地址高八位    
 185   1              cmd = 0x24; 
 186   1              WriteDDC(data1,data2,cmd);
 187   1              WriteCommand(0xb0);//自动写模式
 188   1              for(i=0;i<5000;i++)
 189   1              {
 190   2                      WriteData(0x00);
 191   2              }
 192   1                      WriteCommand(0xb2);
 193   1      }
 194          void LCD_Init(void)     //液晶初始化
 195          {   
 196   1           uchar data1,data2,cmd;    
 197   1                      rw=1;
 198   1              
 199   1           
 200   1           data1 = 0x00;   
 201   1           data2 = 0x10;              //图形显示占用32*128=0xfff，故文本从0x1000开始
 202   1           cmd = 0x40;                //设置文本显示区首地址    
 203   1           WriteDDC(data1,data2,cmd);   
 204   1           data1 = 0x20;              //可以整屏显示
 205   1           data2 = 0x00;   
 206   1           cmd = 0x41;                //设置文本显示区宽度    
 207   1           WriteDDC(data1,data2,cmd);   
 208   1           data1 = 0x00;   
 209   1           data2 = 0x00;   
 210   1           cmd = 0x42;                //设置图形显示区首地址    
 211   1           WriteDDC(data1,data2,cmd);   
 212   1           data1 = 0x1e;   
 213   1           data2 = 0x00;   
 214   1           cmd = 0x43;                //设置图形显示区宽度    
 215   1           WriteDDC(data1,data2,cmd); 
 216   1         cmd =0xa2;                 //设置光标形状 
 217   1         WriteCommand(cmd); 
 218   1           cmd = 0x80;                //显示方式设置
 219   1                                    //启用外部字符发生器,显示方式是文本与图形与 
 220   1           WriteCommand(cmd); 
 221   1           cmd = 0x9e;                //启用光标闪烁,光标不显示,文本显示与图形显示    
 222   1           WriteCommand(cmd);   
 223   1      }
 224          
 225          
 226          
 227          void writecgram()
 228          {
 229   1              uint i,k;
 230   1              WriteDDC(0x03,0x00,0x22);
 231   1              WriteDDC(0x00,0x1c,0x24);
 232   1              for(i=0;i<88;i++)
 233   1              {
 234   2                      WriteCommand(0xb0);
 235   2                      for(k=0;k<8;k++)
 236   2                      {
 237   3                              WriteData(table[i*16+k*2]);
 238   3                      }
 239   2                      for(k=0;k<8;k++)
 240   2                      {
 241   3                              WriteData(table[i*16+k*2+1]);
C51 COMPILER V8.09   CG_RAM                                                                05/16/2010 15:43:07 PAGE 5   

 242   3                      }
 243   2                      WriteCommand(0xb2);     
 244   2              }       
 245   1      }
 246          void display()
 247          {
 248   1              uint i,j,k,add1,add;
 249   1              add1=0x1000;
 250   1              for(i=0;i<23;i++)
 251   1              {
 252   2                      add=add1+i*2;
 253   2                      data1=add;
 254   2                      data2=add>>8;
 255   2                      cmd=0x24;
 256   2                      WriteDDC(data1,data2,cmd);
 257   2                      WriteCommand(0xb0);
 258   2                      WriteData(0x80+4*(k*11+i));
 259   2                      WriteData(0x81+4*(k*11+i));
 260   2              WriteCommand(0xb2);
 261   2                  add=add+32;
 262   2                  data1=add;
 263   2                  data2=add>>8;
 264   2                      cmd=0x24;
 265   2                      WriteDDC(data1,data2,cmd);
 266   2              WriteCommand(0xb0);
 267   2                      
 268   2                      WriteData(0x82+4*(k*11+i));
 269   2                      WriteData(0x83+4*(k*11+i));
 270   2                      WriteCommand(0xb2);     
 271   2                      delay(1000);    
 272   2              }
 273   1              add1=0x1000+(k+1)*64;
 274   1      }
*** WARNING C280 IN LINE 248 OF CG_RAM.C: 'j': unreferenced local variable
 275          void main()
 276          {
 277   1              rst=0;
 278   1              delay(5);
 279   1              rst=1;;
 280   1              LCD_Init();
 281   1              clear();
 282   1              writecgram();
 283   1              clear();
 284   1              display();
 285   1              while(1);
 286   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    581    ----
   CONSTANT SIZE    =    800    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
